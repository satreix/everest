load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@k8s_deploy//:defaults.bzl", "k8s_deploy")

go_library(
    name = "echo_lib",
    srcs = ["echo_server.go"],
    importpath = "github.com/satreix/everest/src/go/echo",
    visibility = ["//visibility:private"],
    deps = [
        "//src/go/logging",
        "//src/proto/helloworld",
        "@com_github_honeycombio_honeycomb_opentelemetry_go//:honeycomb-opentelemetry-go",
        "@com_github_honeycombio_otel_config_go//otelconfig",
        "@com_github_rs_zerolog//log",
        "@io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc//:otelgrpc",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//reflection",
        "@org_golang_google_grpc//status",
    ],
)

go_binary(
    name = "echo",
    embed = [":echo_lib"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "echo_test",
    size = "medium",
    timeout = "short",
    srcs = ["echo_e2e_test.go"],
    data = [
        ":echo",
        "//src/java/echo/client",
    ],
    deps = ["@io_bazel_rules_go//go/tools/bazel:go_default_library"],
)

go_image(
    name = "echo_image",
    embed = [":echo_lib"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
)

k8s_deploy(
    name = "dev",
    images = {
        "registry.satreix.com/satreix/echo:latest": ":echo_image",
    },
    template = ":deployment.yaml",
)

k8s_deploy(
    name = "dev-service",
    template = "service.yaml",
)

k8s_deploy(
    name = "dev-ingress",
    template = "ingress.yaml",
)
