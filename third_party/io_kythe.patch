diff --git a/external.bzl b/external.bzl
index e4c763e0b..0c23f67b0 100644
--- a/external.bzl
+++ b/external.bzl
@@ -1,9 +1,8 @@
-load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")
 load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
 load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
 load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")
 load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
-load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")
+load("@io_bazel_rules_go//go:deps.bzl", "go_rules_dependencies")
 load("@rules_java//java:repositories.bzl", "rules_java_dependencies")
 load("@rules_jvm_external//:defs.bzl", "maven_install")
 load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies")
@@ -13,17 +12,12 @@ load("@io_kythe//third_party/bazel:bazel_repository_files.bzl", "bazel_repositor
 load("@io_kythe//tools/build_rules/lexyacc:lexyacc.bzl", "lexyacc_configure")
 load("@io_kythe//tools/build_rules/build_event_stream:repo.bzl", "build_event_stream_repository")
 load("@io_kythe//kythe/cxx/extractor:toolchain.bzl", cxx_extractor_register_toolchains = "register_toolchains")
-load("@rules_python//python:repositories.bzl", "py_repositories")
 load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")
 load("@rules_rust//tools/rust_analyzer:deps.bzl", "rust_analyzer_deps")
 load("@rules_rust//proto:repositories.bzl", "rust_proto_repositories")
 load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")
 load("@build_bazel_rules_nodejs//:index.bzl", "npm_install")
-load(
-    "@bazelruby_rules_ruby//ruby:deps.bzl",
-    "rules_ruby_dependencies",
-    "rules_ruby_select_sdk",
-)
+load("@bazelruby_rules_ruby//ruby:deps.bzl", "rules_ruby_dependencies", "rules_ruby_select_sdk")
 load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")
 load("@llvm-project-raw//utils/bazel:configure.bzl", "llvm_configure")
 load("@llvm-project-raw//utils/bazel:terminfo.bzl", "llvm_terminfo_disable")
@@ -32,11 +26,8 @@ load("@hedron_compile_commands//:workspace_setup.bzl", "hedron_compile_commands_
 
 def _rule_dependencies():
     go_rules_dependencies()
-    go_register_toolchains(version = "1.19.2")
-    gazelle_dependencies()
     rules_java_dependencies()
     rules_proto_dependencies()
-    py_repositories()
     rules_rust_dependencies()
     rust_register_toolchains(version = "nightly", iso_date = "2022-11-02", dev_components = True, include_rustc_srcs = True)
     rust_proto_repositories(register_default_toolchain = False)
@@ -70,18 +61,15 @@ def _cc_dependencies():
         llvm_terminfo_disable,
         name = "llvm_terminfo",
     )
-
     maybe(
         llvm_zlib_external,
         name = "llvm_zlib",
         external_zlib = "@net_zlib//:zlib",
     )
-
     maybe(
         llvm_configure,
         name = "llvm-project",
     )
-
     maybe(
         http_archive,
         name = "org_sourceware_libffi",
@@ -90,7 +78,6 @@ def _cc_dependencies():
         strip_prefix = "libffi-3.3-rc2",
         urls = ["https://github.com/libffi/libffi/releases/download/v3.3-rc2/libffi-3.3-rc2.tar.gz"],
     )
-
     maybe(
         http_archive,
         name = "souffle",
@@ -103,7 +90,6 @@ def _cc_dependencies():
             "@io_kythe//third_party:souffle_remove_config.patch",
         ],
     )
-
     maybe(
         http_archive,
         name = "net_zlib",
@@ -115,7 +101,6 @@ def _cc_dependencies():
             "https://zlib.net/zlib-1.2.11.tar.gz",
         ],
     )
-
     maybe(
         http_archive,
         name = "org_libzip",
@@ -127,7 +112,6 @@ def _cc_dependencies():
             "https://github.com/nih-at/libzip/releases/download/v1.7.3/libzip-1.7.3.tar.gz",
         ],
     )
-
     maybe(
         git_repository,
         name = "boringssl",
@@ -142,7 +126,6 @@ def _cc_dependencies():
         commit = "3ef9a6b03503ae25f9267473073fea9c39d9cdac",
         shallow_since = "1603819042 +0000",
     )
-
     maybe(
         http_archive,
         name = "com_github_tencent_rapidjson",
@@ -154,7 +137,6 @@ def _cc_dependencies():
             "https://github.com/Tencent/rapidjson/archive/v1.1.0.zip",
         ],
     )
-
     # Make sure to update regularly in accordance with Abseil's principle of live at HEAD
     maybe(
         github_archive,
@@ -163,7 +145,6 @@ def _cc_dependencies():
         commit = "188138facb785e704e2107a3fee58cf9672a22cc",
         sha256 = "6db2791c66a4b0cded7daca87cd7e1524f882a0463b54a336525f76f6ee629c2",
     )
-
     maybe(
         http_archive,
         name = "com_google_googletest",
@@ -174,7 +155,6 @@ def _cc_dependencies():
             "https://github.com/google/googletest/archive/refs/tags/release-1.12.1.tar.gz",
         ],
     )
-
     maybe(
         github_archive,
         name = "com_github_google_glog",
@@ -186,7 +166,6 @@ def _cc_dependencies():
             "glog_library(with_gflags=0)",
         ]),
     )
-
     maybe(
         http_archive,
         name = "org_brotli",
@@ -201,7 +180,6 @@ def _cc_dependencies():
             "https://github.com/google/brotli/archive/v1.0.9.tar.gz",
         ],
     )
-
     maybe(
         github_archive,
         name = "com_google_riegeli",
@@ -209,7 +187,6 @@ def _cc_dependencies():
         commit = "e68237a48ad60896e18d7899b01293751960c1d2",
         sha256 = "fa22ce5dd42712dad6f9d47ffe0d416461ec4f8b8ad7def4fad12dbb0614e59f",
     )
-
     maybe(
         http_archive,
         name = "org_libmemcached_libmemcached",
@@ -221,7 +198,6 @@ def _cc_dependencies():
             "https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz",
         ],
     )
-
     maybe(
         http_archive,
         name = "se_haxx_curl",
@@ -233,7 +209,6 @@ def _cc_dependencies():
             "https://curl.haxx.se/download/curl-7.49.1.tar.gz",
         ],
     )
-
     maybe(
         github_archive,
         name = "com_googlesource_code_re2",
@@ -241,7 +216,6 @@ def _cc_dependencies():
         sha256 = "b6d299a2e91ebe78a222e45228449f3ba569f83c6bd59d582fcb3cd425656c38",
         commit = "2020-10-01",
     )
-
     maybe(
         http_archive,
         name = "com_github_stedolan_jq",
@@ -253,7 +227,6 @@ def _cc_dependencies():
             "https://github.com/stedolan/jq/releases/download/jq-1.4/jq-1.4.tar.gz",
         ],
     )
-
     maybe(
         github_archive,
         name = "com_github_google_snappy",
@@ -262,7 +235,6 @@ def _cc_dependencies():
         sha256 = "38b4aabf88eb480131ed45bfb89c19ca3e2a62daeb081bdf001cfb17ec4cd303",
         commit = "1.1.8",
     )
-
     maybe(
         http_archive,
         name = "com_github_google_leveldb",
@@ -274,7 +246,6 @@ def _cc_dependencies():
             "https://github.com/google/leveldb/archive/v1.20.zip",
         ],
     )
-
     lexyacc_configure()
     cxx_extractor_register_toolchains()
 
@@ -340,7 +311,6 @@ def _go_dependencies():
         sum = "h1:xK2lYat7ZLaVVcIuj82J8kIro4V6kDe0AUDFboUCwcg=",
         version = "v1.0.0",
     )
-
     go_repository(
         name = "com_github_apache_beam",
         build_extra_args = ["-known_import=beam.apache.org"],
@@ -353,7 +323,6 @@ def _go_dependencies():
         sum = "h1:7C2/JDa+fiRJs8kAcfCHxVTf0xxwKsCFQYDMoRdr/dk=",
         version = "v2.31.0+incompatible",
     )
-
     _gazelle_ignore(
         name = "com_github_bazelbuild_rules_go",
         actual = "io_bazel_rules_go",
@@ -369,7 +338,6 @@ def _go_dependencies():
         sum = "h1:T0xke/WvNtMoCqgzPhkX2r4rjY3GDZFi+FjpRZY2Jbs=",
         version = "v1.1.0",
     )
-
     go_repository(
         name = "com_github_burntsushi_toml",
         importpath = "github.com/BurntSushi/toml",
@@ -404,7 +372,6 @@ def _go_dependencies():
         sum = "h1:OZmjad4L3H8ncOIR8rnb5MREYqG8ixi5+WbeUsquF0c=",
         version = "v0.0.0-20210312221358-fbca930ec8ed",
     )
-
     go_repository(
         name = "com_github_creachadair_staticfile",
         importpath = "github.com/creachadair/staticfile",
@@ -421,7 +388,6 @@ def _go_dependencies():
         sum = "h1:Rpmta4xZ/MgZnriKNd24iZMhGpP5dvUcs/uqfBapKZY=",
         version = "v1.4.8",
     )
-
     go_repository(
         name = "com_github_davecgh_go_spew",
         importpath = "github.com/davecgh/go-spew",
@@ -438,7 +404,6 @@ def _go_dependencies():
         sum = "h1:PlZu0n3Tuv04TzpfPbrnI0HW/YwodEXDS+oPKahKF0Q=",
         version = "v0.0.1",
     )
-
     go_repository(
         name = "com_github_dsnet_golib",
         importpath = "github.com/dsnet/golib",
@@ -457,7 +422,6 @@ def _go_dependencies():
         sum = "h1:EQciDnbrYxy13PgWoY8AqoxGiPrpgBZ1R8UNe3ddc+A=",
         version = "v0.1.0",
     )
-
     go_repository(
         name = "com_github_frankban_quicktest",
         importpath = "github.com/frankban/quicktest",
@@ -476,7 +440,6 @@ def _go_dependencies():
         sum = "h1:wQHKEahhL6wmXdzwWG11gIVCkOv05bNOh+Rxn0yngAk=",
         version = "v1.0.0",
     )
-
     go_repository(
         name = "com_github_go_gl_glfw",
         importpath = "github.com/go-gl/glfw",
@@ -501,7 +464,6 @@ def _go_dependencies():
         sum = "h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=",
         version = "v0.0.0-20210331224755-41bb18bfe9da",
     )
-
     go_repository(
         name = "com_github_golang_mock",
         importpath = "github.com/golang/mock",
@@ -519,7 +481,6 @@ def _go_dependencies():
         sum = "h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=",
         version = "v1.5.2",
     )
-
     go_repository(
         name = "com_github_golang_snappy",
         importpath = "github.com/golang/snappy",
@@ -536,14 +497,12 @@ def _go_dependencies():
         sum = "h1:vgeehFs4lfG6xStg/Tr5Kjt4nEHhly0I8te7HKwPUfY=",
         version = "v1.0.9",
     )
-
     go_repository(
         name = "com_github_google_brotli_go_cbrotli",
         importpath = "github.com/google/brotli/go/cbrotli",
         sum = "h1:Hxy9HjQ09RzDr0nxLehWxyoLmoCsukUAkClLJMLBDE0=",
         version = "v0.0.0-20210804124202-19d86fb9a60a",
     )
-
     go_repository(
         name = "com_github_google_btree",
         importpath = "github.com/google/btree",
@@ -560,7 +519,6 @@ def _go_dependencies():
         sum = "h1:BKbKCqvP6I+rmFHt06ZmyQtvB8xAkWdhFyr0ZUNZcxQ=",
         version = "v0.5.6",
     )
-
     go_repository(
         name = "com_github_google_martian",
         importpath = "github.com/google/martian",
@@ -573,14 +531,12 @@ def _go_dependencies():
         sum = "h1:d8MncMlErDFTwQGBK1xhv026j9kqhvw1Qv9IbWT1VLQ=",
         version = "v3.2.1",
     )
-
     go_repository(
         name = "com_github_google_orderedcode",
         importpath = "github.com/google/orderedcode",
         sum = "h1:UzfcAexk9Vhv8+9pNOgRu41f16lHq725vPwnSeiG/Us=",
         version = "v0.0.1",
     )
-
     go_repository(
         name = "com_github_google_pprof",
         importpath = "github.com/google/pprof",
@@ -613,7 +569,6 @@ def _go_dependencies():
         sum = "h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=",
         version = "v1.3.0",
     )
-
     go_repository(
         name = "com_github_googleapis_gax_go_v2",
         build_file_proto_mode = "disable",
@@ -637,7 +592,6 @@ def _go_dependencies():
         sum = "h1:gmcG1KaJ57LophUzW0Hy8NmPhnMZb4M0+kPpLofRdBo=",
         version = "v1.16.0",
     )
-
     go_repository(
         name = "com_github_hanwen_go_fuse",
         importpath = "github.com/hanwen/go-fuse",
@@ -648,7 +602,6 @@ def _go_dependencies():
         sum = "h1:GxS9Zrn6c35/BnfiVsZVWmsG803xwE7eVRDvcf/BEVc=",
         version = "v1.0.0",
     )
-
     go_repository(
         name = "com_github_hashicorp_golang_lru",
         importpath = "github.com/hashicorp/golang-lru",
@@ -661,9 +614,7 @@ def _go_dependencies():
         sum = "h1:nfCOvKYfkgYP8hkirhJocXT2+zOD8yUNjXaWfTlyFKI=",
         version = "v1.0.0",
     )
-
     _gazelle_ignore(name = "com_github_ianlancetaylor_demangle")
-
     go_repository(
         name = "com_github_jmhodges_levigo",
         importpath = "github.com/jmhodges/levigo",
@@ -674,7 +625,6 @@ def _go_dependencies():
         sum = "h1:q5EC36kV79HWeTBWsod3mG11EgStG3qArTKcvlksN1U=",
         version = "v1.0.0",
     )
-
     go_repository(
         name = "com_github_jstemmer_go_junit_report",
         importpath = "github.com/jstemmer/go-junit-report",
@@ -727,7 +677,6 @@ def _go_dependencies():
         sum = "h1:Aak5U0nElisjDCfPSG79Tgzkn2gl66NxOMspRrKnA/g=",
         version = "v1.0.2",
     )
-
     go_repository(
         name = "com_github_nwaples_rardecode",
         importpath = "github.com/nwaples/rardecode",
@@ -738,7 +687,6 @@ def _go_dependencies():
         sum = "h1:+HXp/QFE49Q6qJ3xw0rf1owaNcntNr4q+tsHy8qGUdw=",
         version = "v1.1.1",
     )
-
     go_repository(
         name = "com_github_onsi_ginkgo",
         importpath = "github.com/onsi/ginkgo",
@@ -771,7 +719,6 @@ def _go_dependencies():
         sum = "h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=",
         version = "v0.9.1",
     )
-
     go_repository(
         name = "com_github_pmezard_go_difflib",
         importpath = "github.com/pmezard/go-difflib",
@@ -790,7 +737,6 @@ def _go_dependencies():
         sum = "h1:Ppwyp6VYCF1nvBTXL3trRso7mXMlRrw9ooo375wvi2s=",
         version = "v1.2.0",
     )
-
     go_repository(
         name = "com_github_rogpeppe_go_internal",
         importpath = "github.com/rogpeppe/go-internal",
@@ -827,7 +773,6 @@ def _go_dependencies():
         sum = "h1:ohJHjZ+PcaLxDUjqk2NC3tIGsVa5bXThe1ZheSXOjuk=",
         version = "v0.1.0",
     )
-
     go_repository(
         name = "com_github_stretchr_objx",
         importpath = "github.com/stretchr/objx",
@@ -846,7 +791,6 @@ def _go_dependencies():
         sum = "h1:fBdIW9lB4Iz0n9khmH8w27SJ3QEJ7+IgjPEwGSZiFdE=",
         version = "v1.0.0",
     )
-
     go_repository(
         name = "com_github_ulikunitz_xz",
         importpath = "github.com/ulikunitz/xz",
@@ -857,7 +801,6 @@ def _go_dependencies():
         sum = "h1:t92gobL9l3HE202wg3rlk19F6X+JOxl9BBrCCMYEYd8=",
         version = "v0.5.10",
     )
-
     go_repository(
         name = "com_github_xi2_xz",
         importpath = "github.com/xi2/xz",
@@ -868,9 +811,7 @@ def _go_dependencies():
         sum = "h1:nIPpBwaJSVYIxUFsDv3M8ofmx9yWTog9BfvIu0q41lo=",
         version = "v0.0.0-20171230120015-48954b6210f8",
     )
-
     _gazelle_ignore(name = "com_github_yuin_goldmark")
-
     go_repository(
         name = "com_google_cloud_go",
         importpath = "cloud.google.com/go",
@@ -881,7 +822,6 @@ def _go_dependencies():
         sum = "h1:MjvSkUq8RuAb+2JLDi5VQmmExRJPUQ3JLCWpRB6fmdw=",
         version = "v0.90.0",
     )
-
     go_repository(
         name = "com_google_cloud_go_bigquery",
         importpath = "cloud.google.com/go/bigquery",
@@ -952,7 +892,6 @@ def _go_dependencies():
         sum = "h1:dUUwHk2QECo/6vqA44rthZ8ie2QXMNeKRTHCNY2nXvo=",
         version = "v3.0.0-20200313102051-9f266ea9e77c",
     )
-
     go_repository(
         name = "io_k8s_sigs_yaml",
         importpath = "sigs.k8s.io/yaml",
@@ -979,7 +918,6 @@ def _go_dependencies():
         sum = "h1:rwOQPCuKAKmwGKq2aVNnYIibI6wnV7EvzgfTCzcdGg8=",
         version = "v0.7.0",
     )
-
     go_repository(
         name = "io_rsc_binaryregexp",
         importpath = "rsc.io/binaryregexp",
@@ -988,7 +926,6 @@ def _go_dependencies():
     )
     _gazelle_ignore(name = "io_rsc_quote_v3")
     _gazelle_ignore(name = "io_rsc_sampler")
-
     go_repository(
         name = "org_bitbucket_creachadair_shell",
         importpath = "bitbucket.org/creachadair/shell",
@@ -1009,7 +946,6 @@ def _go_dependencies():
         sum = "h1:L4vld9nzPt90UZNrXjNelTshD74ps4P5NGs3Iq6yN3o=",
         version = "v0.0.9",
     )
-
     go_repository(
         name = "org_golang_google_api",
         importpath = "google.golang.org/api",
@@ -1020,7 +956,6 @@ def _go_dependencies():
         sum = "h1:m5FLEd6dp5CU1F0tMWyqDi2XjchviIz8ntzOSz7w8As=",
         version = "v0.52.0",
     )
-
     go_repository(
         name = "org_golang_google_appengine",
         importpath = "google.golang.org/appengine",
@@ -1049,7 +984,6 @@ def _go_dependencies():
         sum = "h1:M1YKkFIboKNieVO5DLUEVzQfGwJD30Nv2jfUgzb5UcE=",
         version = "v1.1.0",
     )
-
     go_repository(
         name = "org_golang_google_protobuf",
         importpath = "google.golang.org/protobuf",
@@ -1102,7 +1036,6 @@ def _go_dependencies():
         sum = "h1:4CSI6oo7cOjJKajidEljs9h+uP0rRZBPPPhcCbj5mw8=",
         version = "v0.0.0-20210726213435-c6fcb2dbf985",
     )
-
     go_repository(
         name = "org_golang_x_oauth2",
         importpath = "golang.org/x/oauth2",
@@ -1113,7 +1046,6 @@ def _go_dependencies():
         sum = "h1:3B43BWw0xEBsLZ/NO1VALz6fppU3481pik+2Ksv45z8=",
         version = "v0.0.0-20210628180205-a41e5a781914",
     )
-
     go_repository(
         name = "org_golang_x_sync",
         importpath = "golang.org/x/sync",
@@ -1124,7 +1056,6 @@ def _go_dependencies():
         sum = "h1:5KslGYwFpkhGh+Q16bwMP3cOontH8FOep7tGV86Y7SQ=",
         version = "v0.0.0-20210220032951-036812b2e83c",
     )
-
     go_repository(
         name = "org_golang_x_sys",
         importpath = "golang.org/x/sys",
@@ -1135,14 +1066,12 @@ def _go_dependencies():
         version = "v0.0.0-20210630005230-0f9fa26af87c",
         sum = "h1:F1jZWGFhYfh0Ci55sIpILtKKK8p3i2/krTr0H1rg74I=",
     )
-
     go_repository(
         name = "org_golang_x_term",
         importpath = "golang.org/x/term",
         sum = "h1:v+OssWQX+hTHEmOBgwxdZxK4zHq3yOs8F9J7mk0PY8E=",
         version = "v0.0.0-20201126162022-7de9c90e9dd1",
     )
-
     go_repository(
         name = "org_golang_x_text",
         importpath = "golang.org/x/text",
@@ -1153,14 +1082,12 @@ def _go_dependencies():
         sum = "h1:aRYxNxv6iGQlyVaZmk6ZgYEDa+Jg18DxebPSrd6bg1M=",
         version = "v0.3.6",
     )
-
     go_repository(
         name = "org_golang_x_time",
         importpath = "golang.org/x/time",
         sum = "h1:/5xXl8Y5W96D+TtHSlonuFqGHIWVuyCkGJLwGh9JJFs=",
         version = "v0.0.0-20191024005414-555d28b269f0",
     )
-
     http_archive(
         name = "org_golang_x_tools",
         # v0.1.12, latest as of 2022-09-10
@@ -1181,7 +1108,6 @@ def _go_dependencies():
         ],
         patch_args = ["-p1"],
     )
-
     go_repository(
         name = "org_golang_x_xerrors",
         importpath = "golang.org/x/xerrors",
@@ -1202,37 +1128,31 @@ def _bindings():
         name = "vnames_config",
         actual = "@io_kythe//kythe/data:vnames_config",
     )
-
     maybe(
         native.bind,
         name = "libuuid",
         actual = "@io_kythe//third_party:libuuid",
     )
-
     maybe(
         native.bind,
         name = "libmemcached",
         actual = "@org_libmemcached_libmemcached//:libmemcached",
     )
-
     maybe(
         native.bind,
         name = "guava",  # required by @com_google_protobuf
         actual = "@io_kythe//third_party/guava",
     )
-
     maybe(
         native.bind,
         name = "gson",  # required by @com_google_protobuf
         actual = "@maven//:com_google_code_gson_gson",
     )
-
     maybe(
         native.bind,
         name = "zlib",  # required by @com_google_protobuf
         actual = "@net_zlib//:zlib",
     )
-
     # This binding is needed for protobuf. See https://github.com/protocolbuffers/protobuf/pull/5811
     maybe(
         native.bind,
@@ -1287,9 +1207,7 @@ def kythe_dependencies():
     _bindings()
     _rule_dependencies()
     hedron_compile_commands_setup()
-
     _extractor_image_dependencies()
-
     maybe(
         http_file,
         name = "bazel_toolchains_rbe_gen_config_linux_amd64",
diff --git a/kythe/proto/BUILD b/kythe/proto/BUILD
index 144aa104f..aa8c444d6 100644
--- a/kythe/proto/BUILD
+++ b/kythe/proto/BUILD
@@ -3,7 +3,7 @@ load("@rules_proto//proto:defs.bzl", "proto_library")
 load("@rules_java//java:defs.bzl", "java_proto_library")
 load("//:visibility.bzl", "PUBLIC_PROTO_VISIBILITY")
 load(":go.bzl", "go_kythe_proto")
-load("@npm//@bazel/labs:index.bzl", "ts_proto_library")
+# FIXME load("@npm//@bazel/labs:index.bzl", "ts_proto_library")
 load("@rules_rust//proto:proto.bzl", "rust_proto_library")
 
 package(default_visibility = ["//kythe:proto_visibility"])
@@ -74,11 +74,12 @@ java_proto_library(
     deps = [":common_proto"],
 )
 
-ts_proto_library(
-    name = "common_ts_proto",
-    proto = ":common_proto",
-    visibility = [PUBLIC_PROTO_VISIBILITY],
-)
+# FIXME 
+# ts_proto_library(
+#     name = "common_ts_proto",
+#     proto = ":common_proto",
+#     visibility = [PUBLIC_PROTO_VISIBILITY],
+# )
 
 # Public Kythe GraphStore analyzer output format
 proto_library(
@@ -749,8 +750,9 @@ cc_proto_library(
     ],
 )
 
-ts_proto_library(
-    name = "generated_message_info_ts_proto",
-    proto = ":generated_message_info_proto",
-    visibility = [PUBLIC_PROTO_VISIBILITY],
-)
+# FIXME 
+# ts_proto_library(
+#     name = "generated_message_info_ts_proto",
+#     proto = ":generated_message_info_proto",
+#     visibility = [PUBLIC_PROTO_VISIBILITY],
+# )
