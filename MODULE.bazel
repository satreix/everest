module(
    name = "everest",
)

bazel_dep(name = "aspect_rules_js", version = "2.3.7")
bazel_dep(name = "aspect_rules_ts", version = "3.5.2")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "buildifier_prebuilt", version = "7.3.1")
bazel_dep(name = "contrib_rules_jvm", version = "0.28.0")
bazel_dep(name = "fmt", version = "11.1.4")
bazel_dep(name = "gazelle", version = "0.43.0", repo_name = "bazel_gazelle")
bazel_dep(name = "gflags", version = "2.2.2")
bazel_dep(name = "googleapis", version = "0.0.0-20240819-fe8ba054a")
bazel_dep(name = "googletest", version = "1.17.0")
bazel_dep(name = "grpc", version = "1.71.1")
bazel_dep(name = "grpc-java", version = "1.71.0")
bazel_dep(name = "openapi_tools_generator_bazel", version = "0.2.0")
bazel_dep(name = "protobuf", version = "29.4", repo_name = "com_google_protobuf")
bazel_dep(name = "protoc-gen-validate", version = "1.2.1.bcr.1")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_cue", version = "0.12.0")
bazel_dep(name = "rules_foreign_cc", version = "0.14.0")
bazel_dep(name = "rules_go", version = "0.54.0")
bazel_dep(name = "rules_haskell", version = "1.0")
bazel_dep(name = "rules_java", version = "8.11.0")
bazel_dep(name = "rules_jni", version = "0.10.3")
bazel_dep(name = "rules_jvm_external", version = "6.7")
bazel_dep(name = "rules_kotlin", version = "1.9.6")
bazel_dep(name = "rules_nodejs", version = "6.3.5")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "rules_perl", version = "0.4.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_pkl", version = "0.4.0")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "rules_python", version = "0.40.0")
bazel_dep(name = "rules_ruby", version = "0.13.0")
bazel_dep(name = "rules_rust", version = "0.57.0")
bazel_dep(name = "rules_rust_prost", version = "0.57.0")
bazel_dep(name = "toolchains_protoc", version = "0.4.0")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "antlr_grammars_v4",
    build_file_content = """exports_files(glob(["**/*.g4"]))""",
    integrity = "sha256-4jq44mkl6YOmKAmmn16YPwxBefUwsNweHXuybLiZGME=",
    strip_prefix = "grammars-v4-63d037bbb084b2a5692ef09957c5bf7e647eee97",
    url = "https://github.com/antlr/grammars-v4/archive/63d037bbb084b2a5692ef09957c5bf7e647eee97.tar.gz",
)

##

include("//third_party/go:go.MODULE.bazel")

include("//third_party/haskell:haskell.MODULE.bazel")

include("//third_party/java:java.MODULE.bazel")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(
    name = "nodejs",
    node_version = "20.10.0",
)

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:ccaef5ee2f1850270d453fdf700a5392534f8d1a8ca2acda391fbb6a06b81c86",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)
use_repo(
    oci,
    "distroless_base",
    "distroless_base_linux_amd64",
    "distroless_base_linux_arm64",
)

openapi_gen = use_extension("@openapi_tools_generator_bazel//:extension.bzl", "openapi_gen")
openapi_gen.client(
    sha256 = "33e7dfa7a1f04d58405ee12ae19e2c6fc2a91497cf2e56fa68f1875a95cbf220",
    version = "7.12.0",
)
use_repo(openapi_gen, "openapi_tools_generator_bazel_cli")

python_version = "3.12"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(python_version = python_version)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = python_version,
    requirements_lock = "//third_party/python:requirements_lock.txt",
)
use_repo(pip, "pip")

include("//third_party/ruby:ruby.MODULE.bazel")

include("//third_party/rust:rust.MODULE.bazel")
